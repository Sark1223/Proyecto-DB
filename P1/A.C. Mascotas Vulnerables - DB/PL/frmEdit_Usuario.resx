<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="rdDatosCuenta.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>